---
metadata:
  - allowRoleEmulationFor: admin
    kind: authConfig
    webhook:
      mode: POST
      webhookUrl: https://auth.pro.hasura.io/webhook/ddn?role=admin
  - aggregate_functions:
      Boolean:
        bool_and:
          return_type: Boolean
        bool_or:
          return_type: Boolean
        every:
          return_type: Boolean
      Float:
        avg:
          return_type: Float
        cume_dist:
          return_type: Float
        max:
          return_type: Float
        min:
          return_type: Float
        percent_rank:
          return_type: Float
        stddev:
          return_type: Float
        stddev_pop:
          return_type: Float
        stddev_samp:
          return_type: Float
        sum:
          return_type: Float
        var_pop:
          return_type: Float
        var_samp:
          return_type: Float
        variance:
          return_type: Float
      Int:
        bit_and:
          return_type: Int
        bit_or:
          return_type: Int
        bit_xor:
          return_type: Int
        count:
          return_type: Int
        dense_rank:
          return_type: Int
        max:
          return_type: Int
        min:
          return_type: Int
        ntile:
          return_type: Int
        rank:
          return_type: Int
        sum:
          return_type: Int
      String:
        max:
          return_type: String
        min:
          return_type: String
    kind: postgresDataSource
    metadata:
      native_queries: {}
      tables:
        cart_items:
          columns:
            cart_id:
              name: cart_id
              type: any
            created_at:
              name: created_at
              type: any
            id:
              name: id
              type: any
            product_id:
              name: product_id
              type: any
            quantity:
              name: quantity
              type: Int
            updated_at:
              name: updated_at
              type: any
          foreign_relations:
            cart_items_cart_id_foreign:
              column_mapping:
                cart_id: id
              foreign_table: carts
            cart_items_product_id_foreign:
              column_mapping:
                product_id: id
              foreign_table: products
          schema_name: public
          table_name: cart_items
          uniqueness_constraints:
            cart_items_pkey:
              - id
        carts:
          columns:
            created_at:
              name: created_at
              type: any
            id:
              name: id
              type: any
            is_complete:
              name: is_complete
              type: Boolean
            is_reminder_sent:
              name: is_reminder_sent
              type: Boolean
            updated_at:
              name: updated_at
              type: any
            user_id:
              name: user_id
              type: any
          foreign_relations:
            carts_user_id_foreign:
              column_mapping:
                user_id: id
              foreign_table: users
          schema_name: public
          table_name: carts
          uniqueness_constraints:
            carts_pkey:
              - id
        categories:
          columns:
            id:
              name: id
              type: any
            name:
              name: name
              type: String
          foreign_relations: {}
          schema_name: public
          table_name: categories
          uniqueness_constraints:
            categories_pkey:
              - id
        coupons:
          columns:
            amount:
              name: amount
              type: Int
            code:
              name: code
              type: String
            created_at:
              name: created_at
              type: any
            expiration_date:
              name: expiration_date
              type: any
            id:
              name: id
              type: any
            percent_or_value:
              name: percent_or_value
              type: String
            updated_at:
              name: updated_at
              type: any
            user_id:
              name: user_id
              type: any
          foreign_relations:
            coupons_user_id_fkey:
              column_mapping:
                user_id: id
              foreign_table: users
          schema_name: public
          table_name: coupons
          uniqueness_constraints:
            coupons_pkey:
              - id
        manufacturers:
          columns:
            id:
              name: id
              type: any
            name:
              name: name
              type: String
          foreign_relations: {}
          schema_name: public
          table_name: manufacturers
          uniqueness_constraints:
            manufacturers_pkey:
              - id
        notifications:
          columns:
            created_at:
              name: created_at
              type: any
            id:
              name: id
              type: any
            message:
              name: message
              type: String
            updated_at:
              name: updated_at
              type: any
            user_id:
              name: user_id
              type: any
          foreign_relations:
            notifications_user_id_fkey:
              column_mapping:
                user_id: id
              foreign_table: users
          schema_name: public
          table_name: notifications
          uniqueness_constraints:
            notifications_pkey:
              - id
        orders:
          columns:
            created_at:
              name: created_at
              type: any
            delivery_date:
              name: delivery_date
              type: any
            id:
              name: id
              type: any
            is_reviewed:
              name: is_reviewed
              type: Boolean
            product_id:
              name: product_id
              type: any
            status:
              name: status
              type: String
            updated_at:
              name: updated_at
              type: any
            user_id:
              name: user_id
              type: any
          foreign_relations:
            orders_customer_id_fkey:
              column_mapping:
                user_id: id
              foreign_table: users
            orders_product_id_fkey:
              column_mapping:
                product_id: id
              foreign_table: products
          schema_name: public
          table_name: orders
          uniqueness_constraints:
            orders_pkey:
              - id
        products:
          columns:
            category_id:
              name: category_id
              type: any
            country_of_origin:
              name: country_of_origin
              type: String
            created_at:
              name: created_at
              type: any
            description:
              name: description
              type: String
            id:
              name: id
              type: any
            image:
              name: image
              type: String
            manufacturer_id:
              name: manufacturer_id
              type: any
            name:
              name: name
              type: String
            price:
              name: price
              type: Int
            updated_at:
              name: updated_at
              type: any
          foreign_relations:
            products_category_foreign:
              column_mapping:
                category_id: id
              foreign_table: categories
            products_manufacturer_foreign:
              column_mapping:
                manufacturer_id: id
              foreign_table: manufacturers
          schema_name: public
          table_name: products
          uniqueness_constraints:
            products_pkey:
              - id
        reviews:
          columns:
            created_at:
              name: created_at
              type: any
            id:
              name: id
              type: any
            is_visible:
              name: is_visible
              type: Boolean
            product_id:
              name: product_id
              type: any
            rating:
              name: rating
              type: Int
            text:
              name: text
              type: String
            updated_at:
              name: updated_at
              type: any
            user_id:
              name: user_id
              type: any
          foreign_relations:
            reviews_product_id_foreign:
              column_mapping:
                product_id: id
              foreign_table: products
            reviews_user_id_foreign:
              column_mapping:
                user_id: id
              foreign_table: users
          schema_name: public
          table_name: reviews
          uniqueness_constraints:
            reviews_pkey:
              - id
        users:
          columns:
            created_at:
              name: created_at
              type: any
            email:
              name: email
              type: String
            id:
              name: id
              type: any
            is_email_verified:
              name: is_email_verified
              type: Boolean
            last_seen:
              name: last_seen
              type: any
            name:
              name: name
              type: String
            password:
              name: password
              type: String
            updated_at:
              name: updated_at
              type: any
          foreign_relations: {}
          schema_name: public
          table_name: users
          uniqueness_constraints:
            users_pkey:
              - id
    name: default
    postgres_database_url: <YOUR_DATABASE_URL>
    version: 1
  - dataSource: default
    kind: scalarTypeRepresentation
    representation: String
    scalarType: any
  - dataSource: default
    kind: scalarTypeRepresentation
    representation: String
    scalarType: String
  - dataSource: default
    kind: scalarTypeRepresentation
    representation: Int
    scalarType: Int
  - dataSource: default
    kind: scalarTypeRepresentation
    representation: Boolean
    scalarType: Boolean
  - dataSource: default
    kind: scalarTypeRepresentation
    representation: Float
    scalarType: Float
  - kind: newType
    name: any
  - graphqlTypeKind: Scalar
    graphqlTypeName: any
    kind: graphqlType
    typeName: any
  - dataType: cart_items
    kind: model
    name: cart_items
  - fields:
      - name: cart_id
        type: any
      - name: created_at
        type: any
      - name: id
        type: any
      - name: product_id
        type: any
      - name: quantity
        type: Int
      - name: updated_at
        type: any
    kind: objectType
    name: cart_items
  - collection: cart_items
    dataSource: default
    kind: modelSource
    modelName: cart_items
    typeMappings:
      cart_items:
        fieldMappings:
          cart_id:
            column: cart_id
          created_at:
            column: created_at
          id:
            column: id
          product_id:
            column: product_id
          quantity:
            column: quantity
          updated_at:
            column: updated_at
  - graphqlTypeKind: Object
    graphqlTypeName: cart_items
    kind: graphqlType
    typeName: cart_items
  - kind: modelGraphqlApi
    modelName: cart_items
    selectMany:
      queryRootField: cart_items
    selectUniques:
      - queryRootField: cart_items_pkey
        uniqueIdentifier:
          - id
  - kind: typeOutputPermissions
    permissions:
      admin:
        fields:
          - cart_id
          - created_at
          - id
          - product_id
          - quantity
          - updated_at
    typeName: cart_items
  - kind: modelSelectPermissions
    modelName: cart_items
    permissions:
      admin: {}
  - dataType: carts
    kind: model
    name: carts
  - fields:
      - name: created_at
        type: any
      - name: id
        type: any
      - name: is_complete
        type: Boolean
      - name: is_reminder_sent
        type: Boolean
      - name: updated_at
        type: any
      - name: user_id
        type: any
    kind: objectType
    name: carts
  - collection: carts
    dataSource: default
    kind: modelSource
    modelName: carts
    typeMappings:
      carts:
        fieldMappings:
          created_at:
            column: created_at
          id:
            column: id
          is_complete:
            column: is_complete
          is_reminder_sent:
            column: is_reminder_sent
          updated_at:
            column: updated_at
          user_id:
            column: user_id
  - graphqlTypeKind: Object
    graphqlTypeName: carts
    kind: graphqlType
    typeName: carts
  - kind: modelGraphqlApi
    modelName: carts
    selectMany:
      queryRootField: carts
    selectUniques:
      - queryRootField: carts_pkey
        uniqueIdentifier:
          - id
  - kind: typeOutputPermissions
    permissions:
      admin:
        fields:
          - created_at
          - id
          - is_complete
          - is_reminder_sent
          - updated_at
          - user_id
    typeName: carts
  - kind: modelSelectPermissions
    modelName: carts
    permissions:
      admin: {}
  - dataType: categories
    kind: model
    name: categories
  - fields:
      - name: id
        type: any
      - name: name
        type: String
    kind: objectType
    name: categories
  - collection: categories
    dataSource: default
    kind: modelSource
    modelName: categories
    typeMappings:
      categories:
        fieldMappings:
          id:
            column: id
          name:
            column: name
  - graphqlTypeKind: Object
    graphqlTypeName: categories
    kind: graphqlType
    typeName: categories
  - kind: modelGraphqlApi
    modelName: categories
    selectMany:
      queryRootField: categories
    selectUniques:
      - queryRootField: categories_pkey
        uniqueIdentifier:
          - id
  - kind: typeOutputPermissions
    permissions:
      admin:
        fields:
          - id
          - name
    typeName: categories
  - kind: modelSelectPermissions
    modelName: categories
    permissions:
      admin: {}
  - dataType: coupons
    kind: model
    name: coupons
  - fields:
      - name: amount
        type: Int
      - name: code
        type: String
      - name: created_at
        type: any
      - name: expiration_date
        type: any
      - name: id
        type: any
      - name: percent_or_value
        type: String
      - name: updated_at
        type: any
      - name: user_id
        type: any
    kind: objectType
    name: coupons
  - collection: coupons
    dataSource: default
    kind: modelSource
    modelName: coupons
    typeMappings:
      coupons:
        fieldMappings:
          amount:
            column: amount
          code:
            column: code
          created_at:
            column: created_at
          expiration_date:
            column: expiration_date
          id:
            column: id
          percent_or_value:
            column: percent_or_value
          updated_at:
            column: updated_at
          user_id:
            column: user_id
  - graphqlTypeKind: Object
    graphqlTypeName: coupons
    kind: graphqlType
    typeName: coupons
  - kind: modelGraphqlApi
    modelName: coupons
    selectMany:
      queryRootField: coupons
    selectUniques:
      - queryRootField: coupons_pkey
        uniqueIdentifier:
          - id
  - kind: typeOutputPermissions
    permissions:
      admin:
        fields:
          - amount
          - code
          - created_at
          - expiration_date
          - id
          - percent_or_value
          - updated_at
          - user_id
    typeName: coupons
  - kind: modelSelectPermissions
    modelName: coupons
    permissions:
      admin: {}
  - dataType: manufacturers
    kind: model
    name: manufacturers
  - fields:
      - name: id
        type: any
      - name: name
        type: String
    kind: objectType
    name: manufacturers
  - collection: manufacturers
    dataSource: default
    kind: modelSource
    modelName: manufacturers
    typeMappings:
      manufacturers:
        fieldMappings:
          id:
            column: id
          name:
            column: name
  - graphqlTypeKind: Object
    graphqlTypeName: manufacturers
    kind: graphqlType
    typeName: manufacturers
  - kind: modelGraphqlApi
    modelName: manufacturers
    selectMany:
      queryRootField: manufacturers
    selectUniques:
      - queryRootField: manufacturers_pkey
        uniqueIdentifier:
          - id
  - kind: typeOutputPermissions
    permissions:
      admin:
        fields:
          - id
          - name
    typeName: manufacturers
  - kind: modelSelectPermissions
    modelName: manufacturers
    permissions:
      admin: {}
  - dataType: notifications
    kind: model
    name: notifications
  - fields:
      - name: created_at
        type: any
      - name: id
        type: any
      - name: message
        type: String
      - name: updated_at
        type: any
      - name: user_id
        type: any
    kind: objectType
    name: notifications
  - collection: notifications
    dataSource: default
    kind: modelSource
    modelName: notifications
    typeMappings:
      notifications:
        fieldMappings:
          created_at:
            column: created_at
          id:
            column: id
          message:
            column: message
          updated_at:
            column: updated_at
          user_id:
            column: user_id
  - graphqlTypeKind: Object
    graphqlTypeName: notifications
    kind: graphqlType
    typeName: notifications
  - kind: modelGraphqlApi
    modelName: notifications
    selectMany:
      queryRootField: notifications
    selectUniques:
      - queryRootField: notifications_pkey
        uniqueIdentifier:
          - id
  - kind: typeOutputPermissions
    permissions:
      admin:
        fields:
          - created_at
          - id
          - message
          - updated_at
          - user_id
    typeName: notifications
  - kind: modelSelectPermissions
    modelName: notifications
    permissions:
      admin: {}
  - dataType: orders
    kind: model
    name: orders
  - fields:
      - name: created_at
        type: any
      - name: delivery_date
        type: any
      - name: id
        type: any
      - name: is_reviewed
        type: Boolean
      - name: product_id
        type: any
      - name: status
        type: String
      - name: updated_at
        type: any
      - name: user_id
        type: any
    kind: objectType
    name: orders
  - collection: orders
    dataSource: default
    kind: modelSource
    modelName: orders
    typeMappings:
      orders:
        fieldMappings:
          created_at:
            column: created_at
          delivery_date:
            column: delivery_date
          id:
            column: id
          is_reviewed:
            column: is_reviewed
          product_id:
            column: product_id
          status:
            column: status
          updated_at:
            column: updated_at
          user_id:
            column: user_id
  - graphqlTypeKind: Object
    graphqlTypeName: orders
    kind: graphqlType
    typeName: orders
  - kind: modelGraphqlApi
    modelName: orders
    selectMany:
      queryRootField: orders
    selectUniques:
      - queryRootField: orders_pkey
        uniqueIdentifier:
          - id
  - kind: typeOutputPermissions
    permissions:
      admin:
        fields:
          - created_at
          - delivery_date
          - id
          - is_reviewed
          - product_id
          - status
          - updated_at
          - user_id
    typeName: orders
  - kind: modelSelectPermissions
    modelName: orders
    permissions:
      admin: {}
  - dataType: products
    kind: model
    name: products
  - fields:
      - name: category_id
        type: any
      - name: country_of_origin
        type: String
      - name: created_at
        type: any
      - name: description
        type: String
      - name: id
        type: any
      - name: image
        type: String
      - name: manufacturer_id
        type: any
      - name: name
        type: String
      - name: price
        type: Int
      - name: updated_at
        type: any
    kind: objectType
    name: products
  - collection: products
    dataSource: default
    kind: modelSource
    modelName: products
    typeMappings:
      products:
        fieldMappings:
          category_id:
            column: category_id
          country_of_origin:
            column: country_of_origin
          created_at:
            column: created_at
          description:
            column: description
          id:
            column: id
          image:
            column: image
          manufacturer_id:
            column: manufacturer_id
          name:
            column: name
          price:
            column: price
          updated_at:
            column: updated_at
  - graphqlTypeKind: Object
    graphqlTypeName: products
    kind: graphqlType
    typeName: products
  - kind: modelGraphqlApi
    modelName: products
    selectMany:
      queryRootField: products
    selectUniques:
      - queryRootField: products_pkey
        uniqueIdentifier:
          - id
  - kind: typeOutputPermissions
    permissions:
      admin:
        fields:
          - category_id
          - country_of_origin
          - created_at
          - description
          - id
          - image
          - manufacturer_id
          - name
          - price
          - updated_at
    typeName: products
  - kind: modelSelectPermissions
    modelName: products
    permissions:
      admin: {}
  - dataType: reviews
    kind: model
    name: reviews
  - fields:
      - name: created_at
        type: any
      - name: id
        type: any
      - name: is_visible
        type: Boolean
      - name: product_id
        type: any
      - name: rating
        type: Int
      - name: text
        type: String
      - name: updated_at
        type: any
      - name: user_id
        type: any
    kind: objectType
    name: reviews
  - collection: reviews
    dataSource: default
    kind: modelSource
    modelName: reviews
    typeMappings:
      reviews:
        fieldMappings:
          created_at:
            column: created_at
          id:
            column: id
          is_visible:
            column: is_visible
          product_id:
            column: product_id
          rating:
            column: rating
          text:
            column: text
          updated_at:
            column: updated_at
          user_id:
            column: user_id
  - graphqlTypeKind: Object
    graphqlTypeName: reviews
    kind: graphqlType
    typeName: reviews
  - kind: modelGraphqlApi
    modelName: reviews
    selectMany:
      queryRootField: reviews
    selectUniques:
      - queryRootField: reviews_pkey
        uniqueIdentifier:
          - id
  - kind: typeOutputPermissions
    permissions:
      admin:
        fields:
          - created_at
          - id
          - is_visible
          - product_id
          - rating
          - text
          - updated_at
          - user_id
    typeName: reviews
  - kind: modelSelectPermissions
    modelName: reviews
    permissions:
      admin: {}
  - dataType: users
    kind: model
    name: users
  - fields:
      - name: created_at
        type: any
      - name: email
        type: String
      - name: id
        type: any
      - name: is_email_verified
        type: Boolean
      - name: last_seen
        type: any
      - name: name
        type: String
      - name: password
        type: String
      - name: updated_at
        type: any
    kind: objectType
    name: users
  - collection: users
    dataSource: default
    kind: modelSource
    modelName: users
    typeMappings:
      users:
        fieldMappings:
          created_at:
            column: created_at
          email:
            column: email
          id:
            column: id
          is_email_verified:
            column: is_email_verified
          last_seen:
            column: last_seen
          name:
            column: name
          password:
            column: password
          updated_at:
            column: updated_at
  - graphqlTypeKind: Object
    graphqlTypeName: users
    kind: graphqlType
    typeName: users
  - kind: modelGraphqlApi
    modelName: users
    selectMany:
      queryRootField: users
    selectUniques:
      - queryRootField: users_pkey
        uniqueIdentifier:
          - id
  - kind: typeOutputPermissions
    permissions:
      admin:
        fields:
          - created_at
          - email
          - id
          - is_email_verified
          - last_seen
          - name
          - password
          - updated_at
    typeName: users
  - kind: modelSelectPermissions
    modelName: users
    permissions:
      admin: {}
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: cart_id
        target:
          modelField:
            - fieldName: id
    name: cart
    source: cart_items
    target:
      modelName: carts
      relationshipType: Object
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: id
        target:
          modelField:
            - fieldName: cart_id
    name: cart_items
    source: carts
    target:
      modelName: cart_items
      relationshipType: Array
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: product_id
        target:
          modelField:
            - fieldName: id
    name: product
    source: cart_items
    target:
      modelName: products
      relationshipType: Object
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: id
        target:
          modelField:
            - fieldName: product_id
    name: cart_items
    source: products
    target:
      modelName: cart_items
      relationshipType: Array
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: user_id
        target:
          modelField:
            - fieldName: id
    name: user
    source: carts
    target:
      modelName: users
      relationshipType: Object
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: id
        target:
          modelField:
            - fieldName: user_id
    name: carts
    source: users
    target:
      modelName: carts
      relationshipType: Array
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: user_id
        target:
          modelField:
            - fieldName: id
    name: user
    source: coupons
    target:
      modelName: users
      relationshipType: Object
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: id
        target:
          modelField:
            - fieldName: user_id
    name: coupons
    source: users
    target:
      modelName: coupons
      relationshipType: Array
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: user_id
        target:
          modelField:
            - fieldName: id
    name: user
    source: notifications
    target:
      modelName: users
      relationshipType: Object
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: id
        target:
          modelField:
            - fieldName: user_id
    name: notifications
    source: users
    target:
      modelName: notifications
      relationshipType: Array
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: user_id
        target:
          modelField:
            - fieldName: id
    name: user
    source: orders
    target:
      modelName: users
      relationshipType: Object
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: id
        target:
          modelField:
            - fieldName: user_id
    name: orders
    source: users
    target:
      modelName: orders
      relationshipType: Array
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: product_id
        target:
          modelField:
            - fieldName: id
    name: product
    source: orders
    target:
      modelName: products
      relationshipType: Object
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: id
        target:
          modelField:
            - fieldName: product_id
    name: orders
    source: products
    target:
      modelName: orders
      relationshipType: Array
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: category_id
        target:
          modelField:
            - fieldName: id
    name: category
    source: products
    target:
      modelName: categories
      relationshipType: Object
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: id
        target:
          modelField:
            - fieldName: category_id
    name: products
    source: categories
    target:
      modelName: products
      relationshipType: Array
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: manufacturer_id
        target:
          modelField:
            - fieldName: id
    name: manufacturer
    source: products
    target:
      modelName: manufacturers
      relationshipType: Object
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: id
        target:
          modelField:
            - fieldName: manufacturer_id
    name: products
    source: manufacturers
    target:
      modelName: products
      relationshipType: Array
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: product_id
        target:
          modelField:
            - fieldName: id
    name: product
    source: reviews
    target:
      modelName: products
      relationshipType: Object
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: id
        target:
          modelField:
            - fieldName: product_id
    name: reviews
    source: products
    target:
      modelName: reviews
      relationshipType: Array
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: user_id
        target:
          modelField:
            - fieldName: id
    name: user
    source: reviews
    target:
      modelName: users
      relationshipType: Object
  - kind: relationship
    mappings:
      - source:
          fieldPath:
            - fieldName: id
        target:
          modelField:
            - fieldName: user_id
    name: reviews
    source: users
    target:
      modelName: reviews
      relationshipType: Array
data_connectors:
  postgres: http://postgres.ndc-agents:4000/deployment/
validate_connectors: false
